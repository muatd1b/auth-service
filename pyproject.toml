[tool.poetry]
name = ""
version = "0.1.0"
description = ""
authors = ["Ruslan Konovalov <konovalov.rus@gmail.com>"]

[tool.poetry.dependencies]
python = "^3.9"
fastapi = "^0.85.0"
fastapi-pagination = "^0.9.3"
fastapi-sso = "^0.6.2"
pydantic = {extras = ["email"], version = "^1.9.1"}
httpx = "^0.23.0"
requests = "^2.28.1"
sqlmodel = "^0.0.8"
sqladmin = "^0.1.11"
PyJWT = {extras = ["crypto"], version = "^2.4.0"}
alembic = "^1.8.0"
asyncpg = "^0.26.0"
async-lru = "^1.0.3"
passlib = "^1.7.4"
Authlib = "^1.0.1"
boto3 = "^1.24.26"
loguru = "^0.6.0"
uvicorn = "^0.18.2"
sentry-sdk = {extras = ["fastapi"], version = "^1.9.8"}
python-dotenv = "^0.20.0"
python-multipart = "^0.0.5"
aiohttp = "^3.8.1"
mangum = "^0.15.1"
cryptography = "^37.0.4"
bcrypt = "^4.0.0"
psycopg2-binary = "^2.9.3"
mkdocs = "^1.4.2"
Jinja2 = "3.0.0"
yandexcloud = "^0.205.0"

[tool.poetry.dev-dependencies]
mypy = "0.931"
mypy-extensions = "0.4.3"
pylint = "2.3.1"
astroid = "2.4.2"
weasyprint = "52.5"
flake8 = "^4.0.1"
pytest = "^7.1.3"
poethepoet = "^0.16.4"


[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"


[tool.poe.tasks.flake8]
cmd = "flake8 app/ lambda-authorizer/ --verbose"


[tool.black]
line-length = 120
multi_line_output = 3
length_sort = true
py38 = true
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | venv
)/
'''
force-exclude = '''
/(
    migrations
)/
'''


[tool.isort]
src_paths = ["app", "tests"]
line_length = 120
skip = ["venv", "migrations", ".git", "proto"]
multi_line_output = 3
combine_as_imports = true
include_trailing_comma = true
lines_after_imports = 2
use_parentheses = true


[tool.mypy]
python_version = 3.8
ignore_missing_imports = true
follow_imports = "silent"
pretty = true
exclude = ["tests/", "migrations/"]
disallow_incomplete_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_unreachable = true
strict_equality = true
plugins = "pydantic.mypy"

[[pydantic-mypy]]
warn_required_dynamic_aliases = true
warn_untyped_fields = true
init_typed = true

[[mypy-tests."*"]] # exclude doesn't work in some cases, e.g. in VSCode integration
ignore_errors = true


[tool.pylint.MASTER]
extension-pkg-whitelist="pydantic"
[tool.pylint.FORMAT]
max-line-length = 120


[tool.pytest.ini_options]
asyncio_mode="auto"
